[build-system]
# Switch to poetry's build system
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "user-agent-parser"
version = "0.1.3"
description = "Parser User agent string and get device details"
authors = ["Purushot14 <prakash.purushoth@gmail.com>"]
readme = "README.md"
repository = "https://github.com/Purushot14/user-agent-parser"
packages = [{include = "user_agent_parser"}]
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
]

[tool.poetry.dependencies]
python = ">=3.7"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.8"
pytest = "^7.4.0"

# Ruff configuration for linting and formatting
[tool.ruff]
target-version = "py37"
line-length = 120

# Ruff linter settings
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
]
ignore = []
unfixable = []

# Ignore unused imports in __init__.py files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# Ruff import sorting
[tool.ruff.lint.isort]
known-first-party = ["user_agent_parser"]
case-sensitive = true

# Ruff formatter settings
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

